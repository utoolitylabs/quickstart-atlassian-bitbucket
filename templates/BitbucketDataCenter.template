---
AWSTemplateFormatVersion: 2010-09-09
Description: QS(0034) Atlassian Bitbucket Data Center Oct,19,2016
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Bitbucket setup
        Parameters: [BitbucketVersion]
      - Label:
          default: Cluster nodes
        Parameters: [ClusterNodeInstanceType, ClusterNodeMin, ClusterNodeMax]
      - Label:
          default: File server
        Parameters: [FileServerInstanceType, HomeSize, HomeVolumeType, HomeIops]
      - Label:
          default: Database
        Parameters:
          - DBInstanceClass
          - DBMasterUserPassword
          - DBPassword
          - DBStorage
          - DBStorageType
          - DBIops
          - DBMultiAZ
      - Label:
          default: Elasticsearch
        Parameters: [ElasticsearchInstanceType, ElasticsearchSize, ElasticsearchVolumeType, ElasticsearchIops]
      - Label:
          default: Networking
        Parameters:
          - VPC
          - ExternalSubnets
          - InternalSubnets
          - AssociatePublicIpAddress
          - CidrBlock
          - BastionAccess
          - KeyName
          - CustomDnsName
          - SSLCertificateARN
      - Label:
          default: Advanced (Optional)
        Parameters:
          - DBSnapshotId
          - HomeVolumeSnapshotId
          - CreateESBucket
          - ESBucketName
          - ESSnapshotId
          - BitbucketProperties
          - CatalinaOpts
          - AMIOpts
          - HomeDeleteOnTermination
          - DBMaster
          - StartCollectd
      - Label:
          default: Availability/Cost (Optional)
        Parameters: [StackStandbyMode, UseSpotInstances, ClusterNodeMaxSpotPrice]
    ParameterLabels:
      AMIOpts:
        default: AMI Options
      AssociatePublicIpAddress:
        default: Assign public IP
      BastionAccess:
        default: Bastion Security Group ID or CIDR range
      BitbucketProperties:
        default: Bitbucket properties
      BitbucketVersion:
        default: Version
      CatalinaOpts:
        default: Catalina options
      CustomDnsName:
        default: Existing DNS name
      CidrBlock:
        default: Permitted IP range
      ClusterNodeMax:
        default: Maximum number of cluster nodes
      ClusterNodeMin:
        default: Minimum number of cluster nodes
      ClusterNodeInstanceType:
        default: Bitbucket cluster node instance type
      ClusterNodeMaxSpotPrice:
        default: Bitbucket cluster node maximum spot price
      CreateESBucket:
        default: Create S3 bucket for Elasticsearch snapshots
      ESBucketName:
        default: Elasticsearch snapshot S3 bucket name
      ESSnapshotId:
        default: Elasticsearch snapshot ID to restore
      DBInstanceClass:
        default: RDS instance class
      DBMasterUserPassword:
        default: Master password
      DBPassword:
        default: Bitbucket database password
      DBMaster:
        default: Bitbucket primary database
      DBStorage:
        default: Database storage
      DBMultiAZ:
        default: Enable RDS Multi-AZ deployment
      DBStorageType:
        default: Database storage type
      DBIops:
        default: RDS Provisioned IOPS
      DBSnapshotId:
        default: Database snapshot ID to restore
      ElasticsearchInstanceType:
        default: Elasticsearch instance type
      ElasticsearchIops:
        default: Elasticsearch directory IOPS
      ElasticsearchSize:
        default: Elasticsearch directory size
      ElasticsearchVolumeType:
        default: Elasticsearch directory volume type
      FileServerInstanceType:
        default: File server instance type
      HomeDeleteOnTermination:
        default: Delete Home on termination
      HomeIops:
        default: Home directory IOPS
      HomeVolumeType:
        default: Home directory volume type
      HomeSize:
        default: Home directory size
      HomeVolumeSnapshotId:
        default: Home volume snapshot ID to restore
      KeyName:
        default: Key Name
      SSLCertificateARN:
        default: SSL Certificate ARN
      StackStandbyMode:
        default: Stack standby mode
      StartCollectd:
        default: Start the collectd service
      ExternalSubnets:
        default: External Subnets
      InternalSubnets:
        default: Internal Subnets
      UseSpotInstances:
        default: Use spot instances
      VPC:
        default: VPC
Parameters:
  AMIOpts:
    Description: A comma separated list of options to pass to the AMI
    Type: CommaDelimitedList
    Default: ""
  AssociatePublicIpAddress:
    Description: Controls if the EC2 instances are assigned a public IP address
    Type: String
    Default: true
    AllowedValues: [true, false]
    ConstraintDescription: Must be 'true' or 'false'.
  BastionAccess:
    AllowedPattern: "(sg-([0-9a-f]{1,}))|((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2}))"
    ConstraintDescription: Must be the ID of an EC2 security group, or a valid IP CIDR range of the form x.x.x.x/x.
    Description: Bastion Security Group ID or CIDR range. Use 127.0.0.1/32 to deny access.
    Type: String
    Default: '127.0.0.1/32'
  BitbucketProperties:
    Description: A comma-separated list of bitbucket properties in the form key1=value1, key2=value2, ... Find documentation at https://confluence.atlassian.com/x/m5ZKLg
    Type: CommaDelimitedList
    Default: ""
  BitbucketVersion:
    Description: "Version of Bitbucket to install, for example: 4.10.0 or higher. Find valid versions at http://go.atlassian.com/bbs-releases"
    Type: String
    AllowedPattern: "(\\d+\\.\\d+\\.\\d+(-?.*))"
    ConstraintDescription: "Must be a valid Bitbucket version number. For example: 4.10.0 or higher"
  CidrBlock:
    Description: The CIDR IP range that is permitted to access the Bitbucket URL. Use 0.0.0.0/0 if you want public access from the internet.
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  ClusterNodeMin:
    Type: Number
    Default: 1
    Description: Set to 1 for new instances. Can be updated post launch.
  ClusterNodeMax:
    Type: Number
    Default: 2
  ClusterNodeInstanceType:
    Type: String
    Default: c4.xlarge
    AllowedValues:
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - x1.16xlarge
      - x1.32xlarge
    ConstraintDescription: Must be an EC2 instance type in the C5/C4, I3, M5/M4, R4, X1, or T2 family, 'xlarge' or larger
    Description: "Instance type for the cluster nodes. See https://confluence.atlassian.com/x/GpdKLg for guidance"
  ClusterNodeMaxSpotPrice:
    Type: Number
    Description: (Legacy) Maximum spot price (rarely relevant anymore after spot pricing model change)
    MinValue: '0.0421'
    Default: '1.8421'
  CatalinaOpts:
    Description: Java options passed to the JVM that runs Bitbucket.
    Type: String
    Default: ""
  CreateESBucket:
    Description: Set to true to create the S3 bucket within this stack, must be used in conjunction with ESBucketName
    Type: String
    Default: false
    AllowedValues: [true, false]
    ConstraintDescription: Must be 'true' or 'false'.
  CustomDnsName:
    Description: "Use custom existing DNS name for your Data Center instance. Please note: you must own the domain and configure it to point at the load balancer."
    Type: String
    Default: ''
  ESBucketName:
    Type: String
    Default: ""
    Description: "Name of a new, or existing, S3 bucket configured for Elasticsearch snapshots"
    ConstraintDescription: "Must contain only lowercase letters, numbers and hyphens (-)."
    AllowedPattern: "[a-z0-9-]*"
  ESSnapshotId:
    Type: String
    Default: ""
    Description: "Must be a valid snapshot ID for a snapshot in the configured S3 snapshot repository, must be used in conjunction with ESBucketName set to a correctly configured bucket"
    AllowedPattern: "[a-z0-9-]*"
    ConstraintDescription: "Must contain only lowercase letters, numbers and hyphens (-)."
  DBInstanceClass:
    Type: String
    Default: db.m4.large
    AllowedValues:
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.m4.16xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.t2.2xlarge
    ConstraintDescription: Must be a valid RDS instance class, 'db.t2.medium' or larger.
  DBMasterUserPassword:
    NoEcho: true
    Description: Password for the master ('postgres') account. Must be 8 - 128 characters.
    Type: String
    MinLength: 8
    MaxLength: 128
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: Must be at least 8 alphanumeric characters.
  DBPassword:
    Description: Password for the Bitbucket user ('atlbitbucket') account. Max length of 128 characters. Not used if you have specified a Database snapshot ID.
    Type: String
    MaxLength: 128
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: If specified, must contain 8 to 128 alphanumeric characters
    NoEcho: true
  DBMaster:
    Description: Database ARN of the RDS instance to replicate. Setting this parameter will bring up Bitbucket as a Disaster recovery standby, with an RDS read replica database.
    Default: ""
    Type: String
    ConstraintDescription: Must be a valid RDS ARN.
  DBSnapshotId:
    Description: RDS snapshot ID of an existing backup to restore. Must be used in conjunction with HomeVolumeSnapshotId. Leave blank for a new instance
    Type: String
    Default: ""
    ConstraintDescription: Must be a valid RDS snapshot ID, or blank.
  DBStorage:
    Description: Database allocated storage size, in gigabytes (GB). If you choose Provisioned IOPS, storage should be between 100 and 6144
    Type: Number
    Default: 10
    MinValue: 5
    MaxValue: 6144
  DBMultiAZ:
    Type: String
    Default: true
    AllowedValues: [true, false]
    ConstraintDescription: Must be 'true' or 'false'.
  DBStorageType:
    Type: String
    Default: General Purpose (SSD)
    AllowedValues: [General Purpose (SSD), Provisioned IOPS]
    ConstraintDescription: Must be 'General Purpose (SSD)' or 'Provisioned IOPS'.
  DBIops:
    Default: 1000
    Description: "Must be in the range of 1000 - 30000 and a multiple of 1000. This value is only used with Provisioned IOPS. Note: The ratio of IOPS per allocated-storage must be between 3.00 and 10.00."
    Type: Number
    MinValue: 1000
    MaxValue: 30000
    ConstraintDescription: Must be in the range 1000 - 30000.
  ElasticsearchInstanceType:
    Type: String
    Default: m4.xlarge.elasticsearch
    AllowedValues:
      - c4.large.elasticsearch
      - c4.xlarge.elasticsearch
      - c4.2xlarge.elasticsearch
      - c4.4xlarge.elasticsearch
      - c4.8xlarge.elasticsearch
      - m4.large.elasticsearch
      - m4.xlarge.elasticsearch
      - m4.2xlarge.elasticsearch
      - m4.4xlarge.elasticsearch
      - m4.10xlarge.elasticsearch
      - m3.medium.elasticsearch
      - m3.large.elasticsearch
      - m3.xlarge.elasticsearch
      - m3.2xlarge.elasticsearch
      - r4.large.elasticsearch
      - r4.xlarge.elasticsearch
      - r4.2xlarge.elasticsearch
      - r4.4xlarge.elasticsearch
      - r4.8xlarge.elasticsearch
      - r4.16xlarge.elasticsearch
      - r3.large.elasticsearch
      - r3.xlarge.elasticsearch
      - r3.2xlarge.elasticsearch
      - r3.4xlarge.elasticsearch
      - r3.8xlarge.elasticsearch
      - i3.large.elasticsearch
      - i3.xlarge.elasticsearch
      - i3.2xlarge.elasticsearch
      - i3.4xlarge.elasticsearch
      - i3.8xlarge.elasticsearch
      - i3.16xlarge.elasticsearch
      - i2.xlarge.elasticsearch
      - i2.2xlarge.elasticsearch
      - t2.small.elasticsearch
      - t2.medium.elasticsearch
    ConstraintDescription: Must be an Elasticsearch instance type in the M3/M4, R3/R4, I2/I3 or T2 family
  ElasticsearchIops:
    Description: "Elasticsearch directory IOPS (100 - 20000, only used with Provisioned IOPS).  Note: The ratio of IOPS provisioned to the volume size requested can be a maximum of 50; for example, a volume with 5000 IOPS must be at least 100 GiB"
    Type: Number
    Default: 1000
    MinValue: 100
    MaxValue: 20000
    ConstraintDescription: Must be in the range 100 - 20000.
  ElasticsearchSize:
    Description: "Elasticsearch storage size, in gibibytes (GiB) (10 - 16384, only used with EBS instance types: C4/M4/R4/T2)"
    Type: Number
    Default: 32
    MinValue: 10
    MaxValue: 16384
    ConstraintDescription: Must be in the range 10 - 16384.
  ElasticsearchVolumeType:
    Description: "Elasticsearch volume type, only used with EBS instance types: C4/M4/R4/T2)"
    Type: String
    Default: General Purpose (SSD)
    AllowedValues: [General Purpose (SSD), Provisioned IOPS]
    ConstraintDescription: Must be 'General Purpose (SSD)' or 'Provisioned IOPS'.
  FileServerInstanceType:
    Description: "Instance type for the file server hosting the Bitbucket shared home directory. See https://confluence.atlassian.com/x/GpdKLg for guidance"
    Type: String
    Default: m4.xlarge
    AllowedValues:
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - x1.16xlarge
      - x1.32xlarge
    ConstraintDescription: Must be an EC2 instance type in the C5/C4, M5/M4, X1, or T2 family, 'xlarge' or larger.
  HomeDeleteOnTermination:
    Description: Delete Bitbucket home directory volume when the file server instance is terminated.  You must back up your data before terminating your file server instance if this option is set to 'true'
    Type: String
    Default: true
    AllowedValues: [true, false]
    ConstraintDescription: Must be 'true' or 'false'.
  HomeIops:
    Description: "Home directory IOPS (100 - 20000, only used with Provisioned IOPS).  Note: The ratio of IOPS provisioned to the volume size requested can be a maximum of 50; for example, a volume with 5000 IOPS must be at least 100 GiB"
    Type: Number
    Default: 1000
    MinValue: 100
    MaxValue: 20000
    ConstraintDescription: Must be in the range 100 - 20000.
  HomeSize:
    Description: Home directory storage size, in gibibytes (GiB) (100 - 16384)
    Type: Number
    Default: 100
    MinValue: 100
    MaxValue: 16384
    ConstraintDescription: Must be in the range 100 - 16384.
  HomeVolumeSnapshotId:
    Description: EBS snapshot ID of an existing backup to restore as the home directory volume. Must be used in conjunction with DBSnapshotId. Leave blank for a new instance
    Type: String
    Default: ""
    ConstraintDescription: Must be a valid EBS snapshot ID
  HomeVolumeType:
    Type: String
    Default: Provisioned IOPS
    AllowedValues: [General Purpose (SSD), Provisioned IOPS]
    ConstraintDescription: Must be 'General Purpose (SSD)' or 'Provisioned IOPS'.
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: "AWS::EC2::KeyPair::KeyName"
    ConstraintDescription: Must be the name of an existing EC2 Key Pair.
  SSLCertificateARN:
    Description: The ARN of your Server Certificate to use for HTTPS. Refer to Amazon documentation for managing your server certificates. Leave blank if you don't want to set up HTTPS at this time
    Type: String
    MinLength: 0
    MaxLength: 128
    Default: ""
  StartCollectd:
    Type: String
    Default: false
    AllowedValues: [true, false]
    ConstraintDescription: Must be 'true' or 'false'
  ExternalSubnets:
    Description: Subnets (two or more) where your user-facing load balancer will be deployed. MUST be within the selected VPC.
    Type: "List<AWS::EC2::Subnet::Id>"
    ConstraintDescription: Must be a list of two or more Subnet ID's within the selected VPC.
  InternalSubnets:
    Description: Subnets (two or more) where your cluster nodes and other internal infrastructure will be deployed. MUST be within the selected VPC. Specify the ExternalSubnets again here if you wish to deploy the whole stack into the same subnets.
    Type: List<AWS::EC2::Subnet::Id>
    ConstraintDescription: Must be a list of two or more Subnet ID's within the selected VPC.
  StackStandbyMode:
    AllowedValues:
      - cold
      - active
    ConstraintDescription: Must be 'cold' or 'active'.
    Description: Disable/Enable applicable stack resources for cost saving purposes
    Default: active
    Type: String
  UseSpotInstances:
    AllowedValues:
      - true
      - false
    ConstraintDescription: Must be 'true' or 'false'.
    Description: Use Amazon EC2 spot instances
    Default: false
    Type: String
  VPC:
    Description: Virtual Private Cloud
    Type: "AWS::EC2::VPC::Id"
    ConstraintDescription: Must be the ID of a VPC.
Conditions:
  DBProvisionedIops:
    !Equals [!Ref DBStorageType, Provisioned IOPS]
  DisableClusterNodes:
    !Equals [!Ref StackStandbyMode, cold]
  SetupCollectd:
    !Equals [!Ref StartCollectd, true]
  RestoreFromEBSSnapshot:
    !Not [!Equals [!Ref HomeVolumeSnapshotId, ""]]
  RestoreFromRDSSnapshot:
    !Not [!Equals [!Ref DBSnapshotId, ""]]
  RestoreFromESSnapshot:
    !And
      - !Not [!Equals [!Ref ESSnapshotId, ""]]
      - Condition: ESBucketNameSet
  CreateESBucketCondition:
    !And
      - !Equals [!Ref CreateESBucket, "true"]
      - !And
        - !Not [Condition: RestoreFromESSnapshot]
        - Condition: ESBucketNameSet
  ESBucketNameSet:
    !Not [!Equals [!Ref ESBucketName, ""]]
  StandbyMode:
    !Not [!Equals [!Ref DBMaster, ""]]
  SetupSSL:
    !Not [!Equals [!Ref SSLCertificateARN, ""]]
  NotStandbyMode:
    !Equals [!Ref DBMaster, ""]
  GrantSSHAccessToBastionSecurityGroup:
    !Equals [!Select [0, !Split ["-", !Ref BastionAccess]], "sg"]
  GrantSSHAccessToCidrRange: !And
    - !Not [!Equals [!Select [0, !Split ["/", !Ref BastionAccess]], "127.0.0.1"]]
    - !Not [!Condition GrantSSHAccessToBastionSecurityGroup]
  IsElasticsearchEbsOnly: !And
    - !Not [!Equals ["i2", !Select [0, !Split [".", !Ref ElasticsearchInstanceType]]]]
    - !Not [!Equals ["i3", !Select [0, !Split [".", !Ref ElasticsearchInstanceType]]]]
    - !Not [!Equals ["m3", !Select [0, !Split [".", !Ref ElasticsearchInstanceType]]]]
    - !Not [!Equals ["r3", !Select [0, !Split [".", !Ref ElasticsearchInstanceType]]]]
  IsFileServerInstanceEbsOptimized:
    !Not [!Equals ["t2", !Select [0, !Split [".", !Ref FileServerInstanceType]]]]
  IsElasticsearchProvisionedIops:
    !Equals [!Ref ElasticsearchVolumeType, Provisioned IOPS]
  IsHomeProvisionedIops:
    !Equals [!Ref HomeVolumeType, Provisioned IOPS]
  IsVersion4X:
    !Equals ["4", !Select [0, !Split [".", !Ref BitbucketVersion]]]
  IsVersion5X:
    !Equals ["5", !Select [0, !Split [".", !Ref BitbucketVersion]]]
  IsVersionX0:
    !Equals ["0", !Select [1, !Split [".", !Ref BitbucketVersion]]]
  IsVersionX1:
    !Equals ["1", !Select [1, !Split [".", !Ref BitbucketVersion]]]
  IsVersionX2:
    !Equals ["2", !Select [1, !Split [".", !Ref BitbucketVersion]]]
  IsVersionX3:
    !Equals ["3", !Select [1, !Split [".", !Ref BitbucketVersion]]]
  IsVersionX4:
    !Equals ["4", !Select [1, !Split [".", !Ref BitbucketVersion]]]
  IsVersionX5:
    !Equals ["5", !Select [1, !Split [".", !Ref BitbucketVersion]]]
  IsVersionX6:
    !Equals ["6", !Select [1, !Split [".", !Ref BitbucketVersion]]]
  ShouldUseES23:
    !Or [Condition: IsVersion4X, !And [Condition: IsVersion5X, !Or [Condition: IsVersionX0, Condition: IsVersionX1, Condition: IsVersionX2, Condition: IsVersionX3, Condition: IsVersionX4, Condition: IsVersionX5, Condition: IsVersionX6]]]
  RestoreRDSOrStandby:
    !Or [Condition: RestoreFromRDSSnapshot, Condition: StandbyMode]
  SetDBMasterUserPassword:
    !And [!Not [!Equals [!Ref DBMasterUserPassword, ""]], Condition: NotStandbyMode]
  UseCustomDnsName:
    !Not [!Equals [!Ref CustomDnsName, '']]
  UseClusterNodeSpotInstances: !Equals [!Ref UseSpotInstances, true]
Mappings:
  AWSInstanceType2Arch:
    c4.large:
      Arch: HVM64
    c4.xlarge:
      Arch: HVM64
    c4.2xlarge:
      Arch: HVM64
    c4.4xlarge:
      Arch: HVM64
    c4.8xlarge:
      Arch: HVM64
    c5.large:
      Arch: HVM64
    c5.xlarge:
      Arch: HVM64
    c5.2xlarge:
      Arch: HVM64
    c5.4xlarge:
      Arch: HVM64
    c5.9xlarge:
      Arch: HVM64
    c5.18xlarge:
      Arch: HVM64
    i3.large:
      Arch: HVM64
    i3.xlarge:
      Arch: HVM64
    i3.2xlarge:
      Arch: HVM64
    i3.4xlarge:
      Arch: HVM64
    i3.8xlarge:
      Arch: HVM64
    i3.16xlarge:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
    m4.16xlarge:
      Arch: HVM64
    m5.large:
      Arch: HVM64
    m5.xlarge:
      Arch: HVM64
    m5.2xlarge:
      Arch: HVM64
    m5.4xlarge:
      Arch: HVM64
    m5.12xlarge:
      Arch: HVM64
    m5.24xlarge:
      Arch: HVM64
    r4.large:
      Arch: HVM64
    r4.xlarge:
      Arch: HVM64
    r4.2xlarge:
      Arch: HVM64
    r4.4xlarge:
      Arch: HVM64
    r4.8xlarge:
      Arch: HVM64
    r4.16xlarge:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
    t2.xlarge:
      Arch: HVM64
    t2.2xlarge:
      Arch: HVM64
    x1.16xlarge:
      Arch: HVM64
    x1.32xlarge:
      Arch: HVM64
  AWSRegionArch2AMI:
    ap-northeast-1:
      HVM64: ami-a97ab7d6
      HVMG2: NOT_SUPPORTED
    ap-northeast-2:
      HVM64: ami-bdb11bd3
      HVMG2: NOT_SUPPORTED
    ap-south-1:
      HVM64: ami-e4fcd48b
      HVMG2: NOT_SUPPORTED
    ap-southeast-1:
      HVM64: ami-843f3bf8
      HVMG2: NOT_SUPPORTED
    ap-southeast-2:
      HVM64: ami-b26fb3d0
      HVMG2: NOT_SUPPORTED
    ca-central-1:
      HVM64: ami-0777f463
      HVMG2: NOT_SUPPORTED
    eu-central-1:
      HVM64: ami-38d5e5d3
      HVMG2: NOT_SUPPORTED
    eu-west-1:
      HVM64: ami-ffa1a386
      HVMG2: NOT_SUPPORTED
    eu-west-2:
      HVM64: ami-0bac426c
      HVMG2: NOT_SUPPORTED
    eu-west-3:
      HVM64: ami-f029988d
      HVMG2: NOT_SUPPORTED
    sa-east-1:
      HVM64: ami-700d561c
      HVMG2: NOT_SUPPORTED
    us-east-1:
      HVM64: ami-6386c21c
      HVMG2: NOT_SUPPORTED
    us-east-2:
      HVM64: ami-59330d3c
      HVMG2: NOT_SUPPORTED
    us-west-1:
      HVM64: ami-4990742a
      HVMG2: NOT_SUPPORTED
    us-west-2:
      HVM64: ami-c2e0a0ba
      HVMG2: NOT_SUPPORTED
Resources:
  BitbucketFileServerRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ec2.amazonaws.com"
                - "es.amazonaws.com"
            Action: ["sts:AssumeRole"]
      Path: /
      Policies:
        - PolicyName: BitbucketFileServerPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:AttachVolume"
                  - "ec2:CopySnapshot"
                  - "ec2:CreateSnapshot"
                  - "ec2:CreateTags"
                  - "ec2:CreateVolume"
                  - "ec2:DeleteSnapshot"
                  - "ec2:DescribeInstances"
                  - "ec2:DescribeSnapshots"
                  - "ec2:DescribeVolumes"
                  - "ec2:DetachVolume"
                  - "rds:AddTagsToResource"
                  - "rds:CopyDBSnapshot"
                  - "rds:CreateDBSnapshot"
                  - "rds:DeleteDBSnapshot"
                  - "rds:DescribeDBInstances"
                  - "rds:DescribeDBSnapshots"
                  - "rds:PromoteReadReplica"
                  - "rds:ModifyDBInstance"
                  - "rds:RestoreDBInstanceFromDBSnapshot"
                  - "iam:PassRole"
                  - "es:*"
                Resource: ["*"]
              - !If
                - ESBucketNameSet
                - Effect: Allow
                  Action:
                    - "s3:DeleteObject"
                    - "s3:GetObject"
                    - "s3:ListBucket"
                    - "s3:PutObject"
                  Resource:
                    - !Sub ["arn:aws:s3:::${BucketName}", BucketName: !Ref ESBucketName]
                    - !Sub ["arn:aws:s3:::${BucketName}/*", BucketName: !Ref ESBucketName]
                - !Ref "AWS::NoValue"
  BitbucketClusterNodeRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Path: /
      Policies:
        - PolicyName: BitbucketClusterNodePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action: ["ec2:DescribeInstances"]
                Effect: Allow
                Resource: ["*"]
  BitbucketFileServerInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: /
      Roles: [!Ref BitbucketFileServerRole]
  BitbucketClusterNodeInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: /
      Roles: [!Ref BitbucketClusterNodeRole]
  ClusterNodeGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    CreationPolicy:
      ResourceSignal:
        Count: "1"
        Timeout: PT30M  
    Properties:
      DesiredCapacity: !If [DisableClusterNodes, 0, !If [StandbyMode, 0, !Ref ClusterNodeMin]]
      LaunchConfigurationName: !Ref ClusterNodeLaunchConfig
      MaxSize: !If [DisableClusterNodes, 0, !Ref ClusterNodeMax]
      MinSize: !If [DisableClusterNodes, 0, !If [StandbyMode, 0, !Ref ClusterNodeMin]]
      LoadBalancerNames: [!Ref LoadBalancer]
      VPCZoneIdentifier: !Ref InternalSubnets
      Tags:
        - Key: Name
          Value: Bitbucket Node
          PropagateAtLaunch: true
        - Key: Cluster
          Value: !Ref "AWS::StackName"
          PropagateAtLaunch: true       
  ClusterNodeLaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default: [1, 2]
        "1":
          packages:
            !If
              - SetupCollectd
              - yum:
                  collectd: []
                  collectd-java: []
                  collectd-generic-jmx: []
                  collectd-rrdtool: []
              - !Ref "AWS::NoValue"
          files:
            /etc/atl:
              content:
                !Join
                  - "\n"
                  -
                    - ATL_APP_DATA_MOUNT_ENABLED=false
                    - !Sub ["ATL_DB_PASSWORD=${DBMasterUserPassword}", DBMasterUserPassword: !Ref DBMasterUserPassword]
                    - ATL_DB_NAME=bitbucket
                    - !Sub ["ATL_DB_HOST=${DBEndpointAddress}", DBEndpointAddress: !GetAtt DB.Endpoint.Address]
                    - !Sub ["ATL_DB_PORT=${DBEndpointPort}", DBEndpointPort: !GetAtt DB.Endpoint.Port]
                    - ATL_JDBC_DRIVER=org.postgresql.Driver
                    - !Sub
                      - "ATL_JDBC_URL=jdbc:postgresql://${DBEndpointAddress}:${DBEndpointPort}/bitbucket"
                      - DBEndpointAddress: !GetAtt DB.Endpoint.Address
                        DBEndpointPort: !GetAtt DB.Endpoint.Port
                    - ATL_JDBC_USER=atlbitbucket
                    - !Sub ["ATL_JDBC_PASSWORD=${DBPassword}", DBPassword: !Ref DBPassword]
                    - !Sub ["ATL_BITBUCKET_PROPERTIES=\"${BitbucketProperties}", BitbucketProperties: !Join ["\n", !Ref BitbucketProperties]]
                    - hazelcast.network.aws=true
                    - !Sub ["hazelcast.network.aws.iam.role=${BitbucketClusterNodeRole}", BitbucketClusterNodeRole: !Ref BitbucketClusterNodeRole]
                    - !Sub ["hazelcast.network.aws.region=${Region}", Region: !Ref "AWS::Region"]
                    - hazelcast.network.aws.tag.key=Cluster
                    - !Sub ["hazelcast.network.aws.tag.value=${StackName}", StackName: !Ref "AWS::StackName"]
                    - hazelcast.network.multicast=false
                    - !Sub ["hazelcast.group.name=${StackName}", StackName: !Ref "AWS::StackName"]
                    - !Sub ["hazelcast.group.password=${StackName}", StackName: !Ref "AWS::StackName"]
                    - !Sub ["plugin.search.elasticsearch.aws.region=${Region}", Region: !Ref "AWS::Region"]
                    - !Sub ["plugin.search.elasticsearch.baseurl=http://${ESEndpoint}\"", ESEndpoint: !GetAtt Elasticsearch.DomainEndpoint]
                    - !Sub ["ATL_BITBUCKET_VERSION=${BitbucketVersion}", BitbucketVersion: !Ref BitbucketVersion]
                    - ATL_BITBUCKET_BUNDLED_ELASTICSEARCH_ENABLED=false
                    - ATL_NGINX_ENABLED=false
                    - ATL_POSTGRES_ENABLED=false
                    - !Sub ["ATL_PROXY_NAME=${LoadBalancerDNSName}", LoadBalancerDNSName: !If [UseCustomDnsName, !Ref CustomDnsName, !GetAtt LoadBalancer.DNSName]]
                    - ATL_SSL_SELF_CERT_ENABLED=false
                    - !If [SetupSSL, "ATL_SSL_PROXY=true", !Ref "AWS::NoValue"]
                    - !Join ["\n", !Ref AMIOpts]
            /etc/cfn/cfn-hup.conf:
              content: !Join
                - "\n"
                -
                  - "[main]"
                  - !Sub ["stack=${StackId}", StackId: !Ref "AWS::StackId"]
                  - !Sub ["region=${Region}", Region: !Ref "AWS::Region"]
              mode: 000400
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content:
                !Join
                  - "\n"
                  -
                    - "[cfn-auto-reloader-hook]"
                    - triggers=post.update
                    - "path=Resources.ClusterNodeLaunchConfig.Metadata.AWS::CloudFormation::Init"
                    - !Sub
                      - "action=/opt/aws/bin/cfn-init -v --stack ${StackName} --resource ClusterNodeLaunchConfig --region ${Region}"
                      - StackName: !Ref "AWS::StackName"
                        Region: !Ref "AWS::Region"
                    - runas=root
            /home/atlbitbucket/.bash_profile:
              content:
                !Join
                  - "\n"
                  -
                    - if [ -f ~/.bashrc ]; then
                    -     . ~/.bashrc
                    - fi
                    - !Sub ["export CATALINA_OPTS=\"${CatalinaOpts}\"", CatalinaOpts: !Ref CatalinaOpts]
              mode: 000644
              owner: atlbitbucket
              group: atlbitbucket
          commands:
            010_add_nfs_mount:
              command: !Sub
                - "echo ${FileServerPrivateIp}:/media/atl/bitbucket/shared /media/atl/bitbucket/shared nfs lookupcache=pos,noatime,intr,rsize=32768,wsize=32768 0 0 >>/etc/fstab"
                - FileServerPrivateIp: !GetAtt FileServer.PrivateIp
              ignoreErrors: false
            020_make_shared_home_dir:
              command: mkdir -p /media/atl/bitbucket/shared
              ignoreErrors: false
            030_chown_shared_home_dir:
              command: "chown atlbitbucket:atlbitbucket /media/atl/bitbucket /media/atl/bitbucket/shared"
              ignoreErrors: false
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files: [/etc/cfn/cfn-hup.conf, /etc/cfn/hooks.d/cfn-auto-reloader.conf]
              collectd:
                !If [SetupCollectd, {enabled: true, ensureRunning: true}, !Ref "AWS::NoValue"]
              rpcbind:
                enabled: true
                ensureRunning: true
                packages:
                  yum: [nfs-utils]
        "2":
          commands:
            040_mount_nfs:
              command: "bash -c \"until mount /media/atl/bitbucket/shared; do echo 'Mount of shared volume failed trying again in 5 seconds.'; sleep 5; done\""
              ignoreErrors: false
          services:
            sysvinit:
              nfslock:
                enabled: true
                ensureRunning: true
                packages:
                  yum: [nfs-utils]
    Properties:
      AssociatePublicIpAddress: !Ref AssociatePublicIpAddress
      BlockDeviceMappings:
        - DeviceName: /dev/xvdf
          Ebs: {}
          NoDevice: true
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref BitbucketClusterNodeInstanceProfile
      ImageId:
        !FindInMap
          - AWSRegionArch2AMI
          - !Ref "AWS::Region"
          - !FindInMap
              - AWSInstanceType2Arch
              - !Ref ClusterNodeInstanceType
              - Arch
      InstanceType: !Ref ClusterNodeInstanceType
      SecurityGroups: [!Ref SecurityGroup]
      SpotPrice: !If [UseClusterNodeSpotInstances, !Ref ClusterNodeMaxSpotPrice, !Ref 'AWS::NoValue']
      UserData:
        Fn::Base64:
          !Join
            - ""
            -
              - "#!/bin/bash -xe\n"
              - "yum update -y aws-cfn-bootstrap\n"
              - !Sub ["/opt/aws/bin/cfn-init -v --stack ${StackName}", StackName: !Ref "AWS::StackName"]
              - !Sub [" --resource ClusterNodeLaunchConfig --region ${Region}\n", Region: !Ref "AWS::Region"]
              - !Sub ["/opt/aws/bin/cfn-signal -e $? --stack ${StackName}", StackName: !Ref "AWS::StackName"]
              - !Sub [" --resource ClusterNodeGroup --region ${Region}", Region: !Ref "AWS::Region"]
  ClusterNodeScaleUpPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref ClusterNodeGroup
      Cooldown: 600
      ScalingAdjustment: 1
  ClusterNodeScaleDownPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref ClusterNodeGroup
      Cooldown: 600
      ScalingAdjustment: -1
  CPUAlarmHigh:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: Scale up if CPU > 60% for 5 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 60
      EvaluationPeriods: 5
      Threshold: 60
      AlarmActions: [!Ref ClusterNodeScaleUpPolicy]
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref ClusterNodeGroup
      ComparisonOperator: GreaterThanThreshold
  CPUAlarmLow:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: Scale down if CPU < 40% for 30 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: 60
      EvaluationPeriods: 30
      Threshold: 40
      AlarmActions: [!Ref ClusterNodeScaleDownPolicy]
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref ClusterNodeGroup
      ComparisonOperator: LessThanThreshold
  Elasticsearch:
    Type: "AWS::Elasticsearch::Domain"
    Properties:
      EBSOptions:
        EBSEnabled: !If [IsElasticsearchEbsOnly, true, false]
        VolumeIops: !If [IsElasticsearchProvisionedIops, !Ref ElasticsearchIops, !Ref "AWS::NoValue"]
        VolumeSize: !If [IsElasticsearchEbsOnly, !Ref ElasticsearchSize, !Ref "AWS::NoValue"]
        VolumeType: !If [IsElasticsearchEbsOnly, !If [IsElasticsearchProvisionedIops, io1, gp2], !Ref "AWS::NoValue"]
      ElasticsearchVersion: !If [ShouldUseES23, "2.3", "5.5"]
      ElasticsearchClusterConfig:
        InstanceType: !Ref ElasticsearchInstanceType
      AccessPolicies:
        Version: 2012-10-17
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !GetAtt BitbucketClusterNodeRole.Arn
            Action: "es:*"
            Resource: "*"
      Tags:
        - Key: Name
          Value: Bitbucket Elasticsearch cluster
        - Key: Application
          Value: !Ref "AWS::StackId"
  ElasticsearchBucket:
    Type: "AWS::S3::Bucket"
    Condition: CreateESBucketCondition
    Properties:
      BucketName: !Ref ESBucketName
      Tags:
        - Key: Cluster
          Value: !Ref "AWS::StackName"
  FileServer:
    Type: "AWS::EC2::Instance"
    CreationPolicy:
      ResourceSignal:
        Count: "1"
        Timeout: PT30M  
    Metadata:
      Comment: Set up NFS Server and initial bitbucket.properties
      AWS::CloudFormation::Init:
        "1":
          packages:
            !If
              - SetupCollectd
              -
                yum:
                  collectd: []
                  collectd-java: []
                  collectd-generic-jmx: []
                  collectd-rrdtool: []
              - !Ref "AWS::NoValue"
          files:
            /etc/atl:
              content:
                !Join
                  - "\n"
                  -
                    - ATL_ENABLED_PRODUCTS=
                    - ATL_ENABLED_SHARED_HOMES=Bitbucket
                    - ATL_NGINX_ENABLED=false
                    - ATL_POSTGRES_ENABLED=false
                    - ATL_SSL_SELF_CERT_ENABLED=false
                    - ATL_BITBUCKET_BUNDLED_ELASTICSEARCH_ENABLED=false
                    - ATL_APP_NFS_SERVER=true
            /etc/cfn/cfn-hup.conf:
              content:
                !Join
                  - "\n"
                  -
                    - "[main]"
                    - !Sub ["stack=${StackId}", StackId: !Ref "AWS::StackId"]
                    - !Sub ["region=${Region}", Region: !Ref "AWS::Region"]
              mode: 000400
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content:
                !Join
                  - "\n"
                  -
                    - "[cfn-auto-reloader-hook]"
                    - triggers=post.update
                    - "path=Resources.FileServer.Metadata.AWS::CloudFormation::Init"
                    - !Sub
                      - "action=/opt/aws/bin/cfn-init -v --stack ${StackName} --resource FileServer --region ${Region}"
                      - Region: !Ref "AWS::Region"
                        StackName: !Ref "AWS::StackName"
                    - runas=root
            /opt/atlassian/bitbucket-diy-backup/bitbucket.diy-backup.vars.sh:
              content:
                !Join
                  - "\n"
                  -
                    - "# This file was generated from the BitbucketDataCenter CloudFormation template"
                    - !Sub ["INSTANCE_NAME=${StackName}", StackName: !Ref "AWS::StackName"]
                    - !Sub
                      - "BITBUCKET_URL=${HTTP}://${LoadBalancerDNSName}"
                      - HTTP: !If [SetupSSL, "https", "http"]
                        LoadBalancerDNSName: !If [UseCustomDnsName, !Ref CustomDnsName, !GetAtt LoadBalancer.DNSName]
                    - BITBUCKET_HOME=/media/atl/bitbucket
                    - BITBUCKET_UID=atlbitbucket
                    - BITBUCKET_GID=atlbitbucket
                    - !If
                      - StandbyMode
                      - "BACKUP_HOME_TYPE=${BACKUP_HOME_TYPE:-zfs}"
                      - "BACKUP_HOME_TYPE=${BACKUP_HOME_TYPE:-amazon-ebs}"
                    - "BACKUP_DATABASE_TYPE=${BACKUP_DATABASE_TYPE:-amazon-rds}"
                    - BACKUP_ARCHIVE_TYPE=
                    - "BACKUP_ELASTICSEARCH_TYPE=amazon-es"
                    - "BACKUP_ZERO_DOWNTIME=true"
                    - HOME_DIRECTORY_MOUNT_POINT=/media/atl
                    - HOME_DIRECTORY_DEVICE_NAME=/dev/sdf
                    - !Sub ["RESTORE_HOME_DIRECTORY_VOLUME_TYPE=${HomeProvisionedIops}", HomeProvisionedIops: !If [IsHomeProvisionedIops, "io1", "gp2"]]
                    - !If [IsHomeProvisionedIops, !Sub ["RESTORE_HOME_DIRECTORY_IOPS=${HomeIops}", HomeIops: !Ref "HomeIops"], !Ref "AWS::NoValue"]
                    - FILESYSTEM_TYPE=zfs
                    - "ZFS_HOME_TANK_NAME=$(run sudo zfs list -H -o name,mountpoint | grep \"${HOME_DIRECTORY_MOUNT_POINT}\" | cut -f1)"
                    - !Sub ["RDS_INSTANCE_ID=${DB}", DB: !Ref "DB"]
                    - !Sub ["RESTORE_RDS_INSTANCE_CLASS=${DBInstanceClass}", DBInstanceClass: !Ref "DBInstanceClass"]
                    - !Sub ["RESTORE_RDS_MULTI_AZ=${DBMultiAZ}", DBMultiAZ: !Ref "DBMultiAZ"]
                    - !Sub ["RESTORE_RDS_SUBNET_GROUP_NAME=${DBSubnetGroup}", DBSubnetGroup: !Ref "DBSubnetGroup"]
                    - !Sub ["RESTORE_RDS_SECURITY_GROUP=${SecurityGroup}", SecurityGroup: !Ref "SecurityGroup"]
                    - "CURL_OPTIONS=\"-L -s -f\""
                    - !Sub ["AWS_REGION=${Region}", Region: !Ref "AWS::Region"]
                    - "AWS_INFO=$(curl ${CURL_OPTIONS} http://169.254.169.254/latest/dynamic/instance-identity/document)"
                    - "AWS_ACCOUNT_ID=$(echo \"${AWS_INFO}\" | jq -r .accountId)"
                    - "AWS_AVAILABILITY_ZONE=$(echo \"${AWS_INFO}\" | jq -r .availabilityZone)"
                    - "AWS_REGION=$(echo \"${AWS_INFO}\" | jq -r .region)"
                    - "AWS_EC2_INSTANCE_ID=$(echo \"${AWS_INFO}\" | jq -r .instanceId)"
                    - AWS_ADDITIONAL_TAGS=
                    - "BITBUCKET_VERBOSE_BACKUP=${BITBUCKET_VERBOSE_BACKUP:-true}"
                    - KEEP_BACKUPS=5
                    - "ELASTICSEARCH_REPOSITORY_NAME=bitbucket-snapshots"
                    - "ELASTICSEARCH_INDEX_NAME=bitbucket-search-v1"
                    - !Sub ["ELASTICSEARCH_S3_BUCKET=${BucketName}", BucketName: !Ref ESBucketName]
                    - !Sub ["ELASTICSEARCH_S3_BUCKET_REGION=${Region}", Region: !Ref "AWS::Region"]
                    - !Sub ["ELASTICSEARCH_SNAPSHOT_IAM_ROLE=${Role}", Role: !GetAtt BitbucketFileServerRole.Arn]
                    - !Sub ["ELASTICSEARCH_HOST=${ESEndpoint}", ESEndpoint: !GetAtt Elasticsearch.DomainEndpoint]
                    - !If
                      - StandbyMode
                      - !Sub ["STANDBY_JDBC_URL=jdbc:postgres://${DBEndpointAddress}/bitbucket", DBEndpointAddress: !GetAtt DB.Endpoint.Address]
                      - !Ref "AWS::NoValue"
                    - !If
                      - StandbyMode
                      - !Sub ["DR_RDS_READ_REPLICA=${DB}", DB: !Ref DB]
                      - !Ref "AWS::NoValue"
              mode: 000644
              owner: "ec2-user"
              group: "ec2-user"
          commands:
            010_pull_diy_backup_repo:
              command: "git pull"
              cwd: "/opt/atlassian/bitbucket-diy-backup"
              ignoreErrors: true
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files: [/etc/cfn/cfn-hup.conf, /etc/cfn/hooks.d/cfn-auto-reloader.conf]
              collectd:
                !If
                  - SetupCollectd
                  - enabled: true
                    ensureRunning: true
                  - !Ref "AWS::NoValue"
              rpcbind:
                enabled: true
                ensureRunning: true
        "2":
          services:
            sysvinit:
              nfs:
                enabled: true
                ensureRunning: true
              nfslock:
                enabled: true
                ensureRunning: true
          commands:
            !If
              - RestoreFromESSnapshot
              - 020_restore_es_snapshot:
                  command: !Sub
                    - "/opt/atlassian/bitbucket-diy-backup/bitbucket.diy-restore.sh ${ESSnapshotId}"
                    - ESSnapshotId: !Ref "ESSnapshotId"
                  ignoreErrors: false
                  env:
                    SNAPSHOT_TAG_PREFIX: !Ref "ESSnapshotId"
                    BACKUP_HOME_TYPE: "none"
                    BACKUP_DATABASE_TYPE: "none"
              - !Ref "AWS::NoValue"
        configSets:
          default: [1, 2]
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sdf
          Ebs:
            VolumeType: !If [IsHomeProvisionedIops, io1, gp2]
            Iops: !If [IsHomeProvisionedIops, !Ref HomeIops, !Ref "AWS::NoValue"]
            DeleteOnTermination: !Ref HomeDeleteOnTermination
            SnapshotId: !If [RestoreFromEBSSnapshot, !Ref HomeVolumeSnapshotId, !Ref "AWS::NoValue"]
            VolumeSize: !Ref HomeSize
        - DeviceName: /dev/xvdf
          NoDevice: {}
      IamInstanceProfile: !Ref BitbucketFileServerInstanceProfile
      EbsOptimized: !If [IsFileServerInstanceEbsOptimized, true, false]
      ImageId:
        !FindInMap
          - AWSRegionArch2AMI
          - !Ref "AWS::Region"
          - !FindInMap
              - AWSInstanceType2Arch
              - !Ref FileServerInstanceType
              - Arch
      InstanceType: !Ref FileServerInstanceType
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - GroupSet: [!Ref SecurityGroup]
          AssociatePublicIpAddress: !Ref AssociatePublicIpAddress
          DeviceIndex: 0
          DeleteOnTermination: true
          SubnetId: !Select [0, !Ref InternalSubnets]
      Tags:
        - Key: Name
          Value: Bitbucket NFS Server
        - Key: Application
          Value:
            !Ref "AWS::StackId"
      UserData:
        Fn::Base64:
          !Join
            - ""
            -
              - "#!/bin/bash -xe\n"
              - "yum update -y aws-cfn-bootstrap\n"
              - !Sub ["/opt/aws/bin/cfn-init -v --stack ${StackName}", StackName: !Ref "AWS::StackName"]
              - !Sub [" --resource FileServer --region ${Region}\n", Region: !Ref "AWS::Region"]
              - !Sub ["/opt/aws/bin/cfn-signal -e $? --stack ${StackName}", StackName: !Ref "AWS::StackName"]
              - !Sub [" --resource FileServer --region ${Region}\n", Region: !Ref "AWS::Region"]
  DB:
    Type: "AWS::RDS::DBInstance"
    Properties:
      SourceDBInstanceIdentifier: !If [StandbyMode, !Ref DBMaster, !Ref "AWS::NoValue"]
      DBName: !If [RestoreRDSOrStandby, !Ref "AWS::NoValue",bitbucket]
      AllocatedStorage: !Ref DBStorage
      DBInstanceClass: !Ref DBInstanceClass
      DBSnapshotIdentifier: !If [RestoreFromRDSSnapshot, !Ref DBSnapshotId, !Ref "AWS::NoValue"]
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: postgres
      EngineVersion: 9.5.2
      MasterUsername: postgres
      MasterUserPassword: !If [SetDBMasterUserPassword, !Ref DBMasterUserPassword, !Ref "AWS::NoValue"]
      StorageType: !If [DBProvisionedIops, io1, gp2]
      Iops: !If [DBProvisionedIops, !Ref DBIops, !Ref "AWS::NoValue"]
      MultiAZ: !If [StandbyMode, !Ref "AWS::NoValue", !Ref DBMultiAZ]
      VPCSecurityGroups: [!Ref SecurityGroup]
      Tags:
        - Key: Name
          Value: Bitbucket PostgreSQL Database
  DBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: DBSubnetGroup
      SubnetIds: !Ref InternalSubnets
  LoadBalancer:
    Type: "AWS::ElasticLoadBalancing::LoadBalancer"
    Properties:
      AppCookieStickinessPolicy:
        - CookieName: !If [IsVersion4X, JSESSIONID, BITBUCKETSESSIONID]
          PolicyName: SessionStickiness
      ConnectionDrainingPolicy:
        Enabled: true
        Timeout: 300
      ConnectionSettings:
        IdleTimeout: 3600
      CrossZone: true
      Listeners:
        - LoadBalancerPort: 80
          Protocol: HTTP
          InstancePort: !If [SetupSSL, 7991, 7990]
          InstanceProtocol: HTTP
          PolicyNames: [SessionStickiness]
        - !If
            - SetupSSL
            - LoadBalancerPort: 443
              Protocol: HTTPS
              InstancePort: 7990
              InstanceProtocol: HTTP
              PolicyNames:
                - SessionStickiness
              SSLCertificateId: !Ref SSLCertificateARN
            - !Ref AWS::NoValue
        - LoadBalancerPort: 7999
          Protocol: TCP
          InstancePort: 7999
          InstanceProtocol: TCP
      HealthCheck:
        Target: HTTP:7990/status
        Timeout: 29
        Interval: 30
        UnhealthyThreshold: 2
        HealthyThreshold: 2
      Scheme: "internet-facing"
      SecurityGroups: [!Ref SecurityGroup]
      Subnets: !Ref ExternalSubnets
  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Security group allowing SSH and HTTP/HTTPS access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - !If
          - GrantSSHAccessToCidrRange
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: !Ref BastionAccess
          - !Ref "AWS::NoValue"
        - !If
          - GrantSSHAccessToBastionSecurityGroup
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            SourceSecurityGroupId: !Ref BastionAccess
          - !Ref "AWS::NoValue"
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref CidrBlock
        - IpProtocol: tcp
          FromPort: 7999
          ToPort: 7999
          CidrIp: !Ref CidrBlock
  SecurityGroupIngress:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: "-1"
      FromPort: "-1"
      ToPort: "-1"
      SourceSecurityGroupId: !Ref SecurityGroup
Outputs:
  BitbucketURL:
    Description: The URL to access this Bitbucket service
    Value: !Sub
      - "${HTTP}://${LoadBalancerDNSName}"
      - HTTP: !If [SetupSSL, "https", "http"]
        LoadBalancerDNSName: !If [UseCustomDnsName, !Ref CustomDnsName, !GetAtt LoadBalancer.DNSName]
  ClusterNodeGroup:
    Description: The name of the auto scaling group of cluster nodes
    Value: !Ref ClusterNodeGroup
  FileServer:
    Description: The public DNS name of the FileServer node
    Value: !GetAtt FileServer.PublicDnsName
  LoadBalancerURL:
    Description: The Load Balancer URL
    Value: !Sub
      - "${HTTP}://${LoadBalancerDNSName}"
      - HTTP: !If [SetupSSL, "https", "http"]
        LoadBalancerDNSName: !GetAtt LoadBalancer.DNSName
  DBMaster:
    Description: The RDS ARN to use when creating a Data Center standby stack
    Value: !If [NotStandbyMode, !Sub ["arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:${DB}", {DB: !Ref "DB"}], !Ref "AWS::NoValue"]
